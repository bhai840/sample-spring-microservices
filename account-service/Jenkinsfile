// using hostname.

//[code language="java"]
node {
     def registry = "rahulnallari/sample-spring-microservices"
     def registryCredential = 'dockerhub'
    
    
     withMaven(maven:'localmaven') {  // localmaven is what configured in jenkins global configuration

        stage('Checkout') {
            git url: 'https://github.com/bhai840/sample-spring-microservices.git', branch: 'master'
        }

        stage('Build') {
            sh 'mvn clean install'

            def pom = readMavenPom file:'pom.xml'
            print pom.version
            env.version = pom.version
        }
        
        docker.withRegistry( '', ${registryCredential} ) {
        stage('Image') {
            dir ('account-service') {
               // def registry = "rahulnallari/sample-spring-microservices"
              //  def registryCredential = 'dockerhub'
                def app = docker.build "${registry}:account${env.version}"
                def latest = docker.build "${registry}:account_latest"
                app.push()
                }
                //app.push()
               // latest.push()
            }
        }

     /*   stage ('Run') {
            docker.image("rahulnallari/sample-spring-microservices/account-service:${env.version}").run('-p 2222:2222 -h account --name account --link discovery')
        } */

        stage ('Final') {
            build job: 'customer-service-pipeline', wait: false
        }      

    }

}
